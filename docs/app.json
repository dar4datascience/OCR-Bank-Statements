[{"name":"app.R","content":"library(shiny)\nlibrary(bslib)\nlibrary(purrr)\nlibrary(reactablefmtr)\nsource(here::here(\"Logic\", \"parse_bbva_debito.R\"))\nsafe_parse_bbva_debito <- safely(shiny_parse_bbva_debito)\nui <- page_fillable(\n    theme = bs_theme(bootswatch = \"cyborg\"),\n    layout_sidebar(\n        sidebar = sidebar(\"Sidebar area\",\n                          fileInput(\n                              \"pdf_files\",\n                              \"Choose PDF File(s)\",\n                              accept = \".pdf\",\n                              multiple = TRUE\n                          )\n                          ),\n       navset_card_tab(\n           full_screen = TRUE,\n           title = \"Views\",\n           nav_panel(\n               \"PDFs Uploaded\",\n               card_title(\"PDFs by Year and Month\"),\n               reactableOutput(\"contents\")\n           ),\n           nav_panel(\n               \"Parse Financial Data\",\n               card_title(\"Parsed PDFs\"),\n               reactableOutput(\"bbva_debito_parsed\")\n           ),\n           nav_panel(\n               shiny::icon(\"circle-info\"),\n               markdown(\"Learn more about [htmlwidgets](http://www.htmlwidgets.org/)\")\n           )\n       )\n    )\n)\n\nserver <- function(input, output) {\n    \n    # observeEvent(input$pdf_files, {\n    #     print(input$pdf_files)\n    # })\n    \n    output$contents <- renderReactable({\n        req(input$pdf_files)\n        \n        records_bbva_pdfs <- input$pdf_files |>\n            pull(name) |> \n            str_extract(pattern = \"\\\\d{6}\")\n        \n        tbl_2_calendar <-\n        tibble(date = lubridate::ym(records_bbva_pdfs)) |>\n            mutate(\n                month = lubridate::month(date, label = TRUE, abbr = FALSE),\n                mes_order = lubridate::month(date),\n                year = lubridate::year(date),\n                existe = 1\n            ) |>\n            arrange(mes_order, year) |>\n            select(-c(mes_order,\n                      date)) |>\n            mutate(existe = if_else(existe == 1,\n                                    \"ðŸ’²\",\n                                    \"ðŸ›‘\")) |>\n            tidyr::pivot_wider(names_from = month,\n                               values_from = existe) \n        \n        tbl_2_calendar |>\n            arrange(desc(year)) |>\n            # table with icons change number with icon\n            reactable(\n                theme = cyborg(),\n                height = 338,\n                pagination = FALSE,\n                bordered = TRUE,\n                striped = TRUE,\n                highlight = TRUE,\n                sortable = TRUE,\n                #align all center\n                defaultColDef = colDef(align = \"center\"\n                                       )\n            )\n    })\n    \n\n# parse pdf BBVA ----------------------------------------------------------\n    # Create a reactiveValue object\n    df <- reactiveValues(data = NULL)\n    \n    observeEvent(input$pdf_files, {\n\n        req(input$pdf_files)\n        \n        parsed_data <-  map2(input$pdf_files$datapath, input$pdf_files$name, safe_parse_bbva_debito) \n        \n        df$data <- parsed_data |>\n            map(\"result\") |>\n            list_rbind() \n    })\n    \n\n# TABLE RESULTS OF PARSING ------------------------------------------------\n\n    output$bbva_debito_parsed <- renderReactable({\n        req(input$pdf_files)\n        \n        parsed_bbva_df <- df$data\n        \n        parsed_bbva_df |>\n            reactable(\n                theme = cyborg(),\n                pagination = FALSE,\n                bordered = TRUE,\n                striped = TRUE,\n                highlight = TRUE,\n                sortable = TRUE,\n                #align all center\n                defaultColDef = colDef(align = \"center\")\n            )\n    })    \n}\n\nshinyApp(ui, server)\n","type":"text"},{"name":"DESCRIPTION","content":"Title: WEBR shiny!\nAuthor: DAR\nAuthorUrl: https://github.com/dar4datascience/OCR-Bank-Statements\nLicense: MIT\nDisplayMode: Showcase\n","type":"text"}]
